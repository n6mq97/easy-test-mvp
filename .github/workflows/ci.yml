name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    name: Test Backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: back/.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('back/poetry.lock') }}
    
    - name: Install dependencies
      working-directory: ./back
      run: poetry install --with dev
    
    - name: Run tests
      working-directory: ./back
      run: poetry run pytest

  test-frontend:
    runs-on: ubuntu-latest
    name: Test Frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    
    - name: Install dependencies
      working-directory: ./front
      run: npm ci
    
    - name: Run tests
      working-directory: ./front
      run: npm run test:run
    
    - name: Run linting
      working-directory: ./front
      run: npm run lint
    
    - name: Build
      working-directory: ./front
      run: npm run build

  deploy:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    name: Deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        echo "Backend tests passed ✓"
        echo "Frontend tests passed ✓"
        echo "Build successful ✓"
        # Здесь можно добавить реальные команды деплоя
