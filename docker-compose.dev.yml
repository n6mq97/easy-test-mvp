services:
  db:
    image: postgres:13
    volumes:
      - ./db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    network_mode: service:backend

  backend:
    build: 
      context: ./back
      dockerfile: Dockerfile.dev
    command: uvicorn app.main:app --host ${BACKEND_HOST} --port ${BACKEND_PORT} --reload
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - ${SSH_AUTH_SOCK}:/ssh-agent
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
      - "${DB_PORT}:${DB_PORT}"
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    working_dir: /app/back
    environment:
      - SSH_AUTH_SOCK=/ssh-agent
      - DATABASE_URL=${DATABASE_URL}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_PORT=${BACKEND_PORT}
      - API_BASE_URL=${API_BASE_URL}

  frontend:
    image: node:20-alpine
    command: sh -c "if [ ! -d 'node_modules' ]; then npm install; fi && npm run dev -- --host"
    volumes:
      - .:/app
    working_dir: /app/front
    network_mode: service:backend
    environment:
      - VITE_API_BASE_URL=${FRONTEND_API_BASE_URL}
