#!/bin/bash

echo "üß™ Testing CI Pipeline Locally"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.dev.yml" ]; then
    echo "‚ùå Error: Run this script from the project root directory"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ Docker
if ! docker info >/dev/null 2>&1; then
    echo "‚ùå Error: Docker is not accessible. You may need to:"
    echo "   1. Add your user to the docker group: sudo usermod -aG docker \$USER"
    echo "   2. Log out and log back in, or run: newgrp docker"
    echo "   3. Or run this script with sudo: sudo ./scripts/test-ci.sh"
    echo "   4. Or use: make test-ci-sudo"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë Stopping existing containers..."
docker-compose -f docker-compose.dev.yml down

# –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL
echo "üêò Starting PostgreSQL..."
docker-compose -f docker-compose.dev.yml up -d db

# –ñ–¥–µ–º, –ø–æ–∫–∞ PostgreSQL –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
echo "‚è≥ Waiting for PostgreSQL to be ready..."
until docker exec easy-test-mvp-db-1 pg_isready -U user -d testdb; do
    echo "Waiting for PostgreSQL..."
    sleep 2
done
echo "‚úÖ PostgreSQL is ready!"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞
echo "üì¶ Installing backend dependencies..."
cd back
poetry install --with dev
cd ..

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ Running database migrations..."
cd back
export DATABASE_URL="postgresql://user:password@localhost:5432/testdb"
poetry run alembic upgrade head
cd ..

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
echo "üß™ Running backend tests..."
cd back
export DATABASE_URL="postgresql://user:password@localhost:5432/testdb"
poetry run pytest -v
cd ..

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë Stopping containers..."
docker-compose -f docker-compose.dev.yml down

echo "‚úÖ CI pipeline test completed!"
